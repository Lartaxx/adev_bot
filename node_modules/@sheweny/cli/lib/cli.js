"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cli = void 0;
const arg = require("arg");
const chalk = require("chalk");
const create_1 = require("./commands/create");
const util_1 = require("./commands/add/util");
const add_1 = require("./commands/add/add");
const promises_1 = require("fs/promises");
const help_1 = require("./commands/help");
async function getArgs(rawArgs) {
    const args = arg({
        "--yes": Boolean,
        "--help": Boolean,
        "-y": "--yes",
        "-h": "--help",
    }, {
        argv: rawArgs.slice(2),
    });
    if (args["--help"])
        return {
            help: args["--help"],
            executeType: args._[0],
            addType: args._[1],
        };
    const executeType = args._[0]
        ? args._[0].toLowerCase()
        : undefined;
    if (!executeType ||
        (executeType && executeType !== "create" && executeType !== "add")) {
        console.log(`${chalk.red.bold("ERROR")} Invalid command
Run "${chalk.yellow("sheweny")} --help" for more informations`);
        return process.exit(1);
    }
    let secondaryArg = args._[1];
    if (executeType === "add") {
        if (!(await (0, promises_1.readdir)(process.cwd())).includes("cli-config.json")) {
            console.log(`${chalk.red.bold("ERROR")} cli-config not found`);
            return process.exit(1);
        }
        secondaryArg = secondaryArg ? secondaryArg.toLowerCase() : undefined;
        if (!secondaryArg ||
            (secondaryArg &&
                secondaryArg !== "command" &&
                secondaryArg !== "event" &&
                secondaryArg !== "button" &&
                secondaryArg !== "selectmenu" &&
                secondaryArg !== "inhibitor")) {
            console.log(`${chalk.red.bold("ERROR")} Invalid command

Run "${chalk.yellow("sheweny")} --help add" for more informations`);
            return process.exit(1);
        }
    }
    return {
        executeType,
        help: args["--help"] || false,
        skipPrompts: args["--yes"] || false,
        dirName: executeType === "create" ? args._.filter((v, i) => i !== 0).join("_") : undefined,
        addType: executeType === "add"
            ? secondaryArg
            : undefined,
    };
}
async function cli(args) {
    let options = await getArgs(args);
    if (options.help)
        return (0, help_1.executeHelp)(options.executeType, options.addType);
    if (options.executeType === "create") {
        options = await (0, create_1.getCreateOptions)(options);
        await (0, create_1.createProject)(options);
    }
    else if (options.executeType === "add") {
        options = await (0, util_1.getAddOptions)(options);
        await (0, add_1.addTemplate)(options);
    }
}
exports.cli = cli;
