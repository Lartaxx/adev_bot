"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadFiles = void 0;
const path_1 = require("path");
const readDirFiles_1 = require("./readDirFiles");
const collection_data_1 = require("collection-data");
const errors_1 = require("../errors");
async function loadFiles(client, directory, key) {
    try {
        const collection = new collection_data_1.Collection();
        const baseDir = (0, path_1.resolve)(require.main.path, directory);
        const filesPath = await (0, readDirFiles_1.readDirAndPush)(baseDir);
        for (const filePath of filesPath) {
            let ClassImport = await Promise.resolve().then(() => require(filePath));
            if (Object.keys(ClassImport).length) {
                const key = Object.keys(ClassImport)[0];
                ClassImport = ClassImport[key];
            }
            if (!ClassImport) {
                new errors_1.ShewenyWarning(client, `Cannot find a class to load at file :\n${filePath}`);
                continue;
            }
            const instance = new ClassImport(client);
            if (!instance[key]) {
                new errors_1.ShewenyWarning(client, `The class ${instance.constructor.name} not have property ${key} in super() method. Unable to load it.\nPath : ${filePath}`);
                continue;
            }
            instance.path = filePath;
            collection.set(instance[key], instance);
        }
        return collection;
    }
    catch (err) {
        new errors_1.ShewenyError(client, err.message);
    }
}
exports.loadFiles = loadFiles;
